version: 1
applications:
  - frontend:
      phases:
        preBuild:
          commands:
            - pip install --upgrade pip
            - pip install -r requirements.txt
            - export FLASK_APP=run.py
            - export FLASK_ENV=development
            - export PYTHONPATH=$PYTHONPATH:/codebuild/output/src2603305598/src/valet-parking-app
            - |
              echo "Checking dependencies..."
              python -c "import eventlet; print('Eventlet version:', eventlet.__version__)"
              python -c "import socketio; print('Python-SocketIO version:', socketio.__version__)"
              python -c "import flask_socketio; print('Flask-SocketIO package:', flask_socketio.__name__)"
              python -c "import engineio; print('Engine.IO package:', engineio.__name__)"
            - mkdir -p config
            - touch config/__init__.py
            - |
              echo '#!/bin/bash
              exec gunicorn \
                --worker-class eventlet \
                --workers 1 \
                --bind 0.0.0.0:8000 \
                --timeout 120 \
                --keep-alive 2 \
                --log-level debug \
                --access-logfile - \
                --error-logfile - \
                --capture-output \
                --preload \
                wsgi:wsgi' > start.sh
            - chmod +x start.sh
        build:
          commands:
            - echo "Starting Flask application with Gunicorn"
            - ./start.sh
      artifacts:
        baseDirectory: .
        files:
          - '**/*'
      cache:
        paths:
          - .pip-cache
    appRoot: .