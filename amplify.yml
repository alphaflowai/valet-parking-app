version: 1
applications:
  - frontend:
      phases:
        preBuild:
          commands:
            - pip install --upgrade pip
            - pip install -r requirements.txt
            - export FLASK_APP=run.py
            - export FLASK_ENV=development
            - export PYTHONPATH=$PYTHONPATH:/codebuild/output/src2603305598/src/valet-parking-app
            - |
              cat << 'EOF' > start.sh
              #!/bin/bash
              
              echo "Starting Gunicorn..."
              
              # Minimal environment setup
              export EVENTLET_NOSSL=yes
              
              # Start Gunicorn with minimal config
              gunicorn \
                --worker-class eventlet \
                --workers 1 \
                --bind 0.0.0.0:8000 \
                --log-level info \
                --access-logfile - \
                --error-logfile - \
                wsgi:wsgi &
              
              GUNICORN_PID=$!
              
              echo "Gunicorn started with PID: $GUNICORN_PID"
              sleep 5
              
              if ps -p $GUNICORN_PID > /dev/null; then
                echo "Gunicorn process is running"
                curl -s http://localhost:8000/health || true
                wait $GUNICORN_PID
              else
                echo "Gunicorn process failed to start"
                exit 1
              fi
              EOF
            - chmod +x start.sh
        build:
          commands:
            - echo "Starting Flask application with Gunicorn"
            - ./start.sh
      artifacts:
        baseDirectory: .
        files:
          - '**/*'
      cache:
        paths:
          - .pip-cache
    appRoot: .